{
  "welcome": "欢迎使用 peg, 第三方开源 DogeCloud OSS 指令行工具。",
  "langMaintainer": "LemonPrefect",
  "commands": {
    "config": {
      "description": "初始化或编辑配置文件",
      "add": { 
        "description": "增加新的存储桶配置",
        "examples": {
          "addBucket": "增加存储桶配置"
        },
        "options": {
          "alias": "存储桶别名"
        },
        "errors": {
        },
        "logs": {
          "added": "存储桶 `{{alias}}' 的配置已经写入配置文件。"
        }
      },
      "delete": {
        "description": "删除存在的存储桶配置",
        "examples": {
          "deleteBucket": "删除存储桶配置"
        },
        "options": {
          "alias": "存储桶别名"
        },
        "logs": {
          "deleted": "存储桶 `{{alias}}' 的配置(如下)已经从配置中删除。"
        }
      },
      "init": {
        "description": "交互式生成配置文件",
        "examples": {
          "init": "初始化配置文件 ./1.yaml"
        },
        "logs": {
          "configPathSet": "选定配置文件路径: (now:{{configPath}})",
          "accessIdSet": "你的 Secret ID:",
          "accessKeySet": "你的 Secret Key:",
          "bucketAliasSet": "要添加的一个存储桶别名:"
        }
      },
      "set": {
        "description": "修改配置文件基础组的信息(鉴权)",
        "examples": {
          "credentialSet": "设置鉴权凭证"
        },
        "logs": {
          "credentialSet": "凭证已保存"
        }
      },
      "show": {
        "description": "输出指定配置文件中的配置信息",
        "examples": {
          "showAllInfo": "输出配置信息"
        }
      }
    },
    "cp": {
      "description": "上传、下载、(同地域桶中/桶间)复制存储对象",
      "examples": {
        "upload": "上传文件",
        "download": "下载文件",
        "copy": "复制文件"
      },
      "options": {
        "meta": "指定文件的元数据",
        "partSize": "(上传限定) 指定上传分片块大小(MB)",
        "recursive": "递归处理文件",
        "signURL": "(下载/同步限定) 生成预签名 URL",
        "sync": "执行前检查文件的 CRC64，操作不一致的文件",
        "threadNum": "(上传限定) 指定单文件上传的线程数"
      },
      "errors": {
        "noFileToDownload": "没有找到符合条件的文件，下载终止。",
        "fileOccupied": "文件 `{{fullpath}}' 被占用。",
        "metaInvalid": "元数据 `{{meta}}' 无效。",
        "pathInvalid": "`{{fullpath}}' 既不是有效的文件也不是有效的目录。",
        "urlShouldBeFile": "给定的路径应该是文件。",
        "urlShouldBeDir": "给定的路径应该是目录。"
      },
      "logs": {
        "syncHashing": "计算同步哈希中..."
      }
    },
    "hash": {
      "description": "获取本地或远程文件的哈希值(CRC64)",
      "examples": {
        "hashFile": "获取 `example' 桶 test/ 目录中 `example.file' 的哈希值"
      },
      "options": {
        "signURL": "使用预签名 URL。"
      },
      "errors": {
        "noFileFound": "没有找到 `{{location}}' (中的)文件。"
      },
      "logs": {
        "noHash": "[没有哈希值]"
      }
    },
    "ls": {
      "description": "列出存储桶或存储对象",
      "examples": {
        "recursive": "递归列出文件"
      },
      "options": {
        "limit": "结果集大小(0~1000)",
        "recurse": "递归列出文件"
      }
    },
    "mb": {
      "description": "新建存储桶",
      "examples": {
        "createBucket": "在成都地域新建存储桶 `examplebucket'"
      },
      "options": {
        "level": "存储桶类型"
      },
      "logs": {
        "created": "存储桶 `{{alias}}' 已创建.",
        "hintConfig": "此指令不会编辑配置文件，用 `./peg config add {{alias}}' 以添加存储桶配置。"
      },
      "errors": {
        "craete": "存储桶 `{{alias}}' 创建失败。"
      }
    },
    "meta": {
      "description": "设置文件的控制元数据",
      "examples": {
        "metaSetSome": "设置、删除文件元数据",
        "metaSetRecurse": "递归设置、删除文件元数据"
      },
      "options": {
        "meta": "文件元数据操作",
        "recursive": "递归操作文件元数据"
      },
      "errors": {
        "headerInvalid": "`元数据 {{header}}' 无效。",
        "checkFailed": "文件的元数据将不会更改。"

      },
      "logs": {
        "metaSetPre": "以下文件的元数据将变更。",
        "metaIndicator": "元数据变动如下: ",
        "metaSetQuestion": "你确定要这么变更元数据吗？输入 `set' 以确认操作",
        "metaSet": "为 `{{length}}' 个  `{{path}}' 中的文件变更了元数据。",
        "metaSeting": "正在为 `{{key}}' 变更元数据..."
      }
    },
    "mv": {
      "description": "移动存储对象",
      "examples": {
        "moveFile": "移动文件",
        "moveFiles": "将文件从 `a' 移动到 `b'"
      },
      "options": {
        "force": "移动并覆盖原有目标",
        "recursive": "递归移动文件"
      }
    },
    "rb": {
      "description": "删除存储桶",
      "examples": {
        "deleteBucket": "删除成都地域的 `examplebucket'"
      },
      "logs": {
        "deleteConfirm": "你确定要删除存储桶 `{{alias}}' 吗？输入 `{{alias}}' 以确认",
        "deleted": "存储桶 `{{alias}}' 已经被删除。",
        "hintConfig": "此指令不会编辑配置文件，用 `./peg config delete {{alias}}' 以删除存储桶配置。"
      },
      "errors": {
        "checkFailed": "存储桶 `{{alias}}' 将不会被删除。",
        "deleteFailedOrNotExist": "存储桶 `{{alias}}' 删除失败，或许不存在。"
      }
    },
    "rm": {
      "description": "删除存储对象",
      "examples": {
        "deleteAllFile": "删除 `example' 桶中的 test/ 下的全部文件"
      },
      "options": {
        "recursive": "递归删除对象"
      },
      "logs": {
        "deletePre": "以下文件将被删除。",
        "deleteConfirm": "你确定要删除他们吗？输入 `delete' 以确认",
        "deleted": "文件已删除。"
      },
      "errors": {
        "refersToDir": "`{{location}}' 是一个目录, 用 `-r' 才能删除他。",
        "checkFailed": "文件将不会被删除。"
      }
    },
    "signurl": {
      "description": "(预签名收费流程) 获取可用访问期十秒的预签名链接",
      "examples": {
        "signurl": "获取 `example' 桶中 test/ 下的文件"
      },
      "errors": {
      }
    },
    "synccheck": {
      "description": "检查文件与 CDN 节点缓存是否一致",
      "examples": {
        "checkFiles": "检查文件同步性"
      },
      "options": {
        "recursive": "递归检查文件",
        "url": "输出全部需要更新缓存的链接"
      },
      "logs": {
        "noUnsynced": "`{{path}}' 中没有需要刷新缓存的文件。",
        "hasUnsynced": "`{{path}}' 中的以下文件需要刷新缓存。"
      }
    }
  },
  "utils": {
    "chart": {
      "total": "总计: "
    },
    "config": {
      "initFailed": "使用 {{path}} 初始化配置文件失败。"
    },
    "bucket": {
      "notExist": "存储桶 `{{bucketAlias}}' 在配置中不存在。"
    },
    "url": {
      "invalid": "存储桶 `{{bucket}}' 或路径 `{{path}}' 不正确。"
    }
  },
  "charts": {
    "bucket": {
      "name": "名称",
      "alias": "别名",
      "region": "地域",
      "endpoint": "终端"
    },
    "file": {
      "key": "文件", 
      "type": "类型", 
      "lastModified": "最后修改时间", 
      "size": "大小",
      "lastCached": "最后缓存时间"
    },
    "meta": {
      "meta": "元数据", 
      "change": "变更"
    }
  },
  "cliche": {
    "configPathIndicator": "配置文件路径: {{configPath}}",
    "basicConfigTitle": "基本配置信息: ",         
    "notInEndpoint": "存储桶 `{{alias}}' 没有添加，因为其不存在于远程终端。",
    "chartBucketTitle": "存储桶: ",
    "chargeTip": "公网出流量 CNY0.5/GB/DAY",
    "options": {
      "exclude": "从结果集中剔除",
      "include": "从结果集中选出",
      "region": "地域"
    },
    "bars": {
      "copy": "正在复制文件",
      "download": "正在下载文件",
      "upload": "正在上传文件",
      "move": "正在移动文件"
    },
    "recurse": {
      "walking": "遍历 `{{key}}'",
      "hashing": "计算 `{{key}}' 的哈希",
      "syncTimeGetting": "获取 `{{key}}' 的同步时间"

    },
    "errors": {
      "argsInvalid": "参数 `{{paths}}' 无效。",
      "pathInvalid": "`路径 {{path}}' 无效。",
      "refersToDir": "`路径 {{location}}' 需要是文件。",
      "noFileFound": "在 `{{path}}' 中没有找到文件。"
    }
  },
  "options": {
    "configPath": "配置文件路径(默认 $HOME/.peg.config.yaml)",
    "secretId": "指定 secretId",
    "secretKey": "指定 secretKey"
  }
}